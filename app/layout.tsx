import type { Metadata } from "next";
import { Montserrat } from "next/font/google";
import "./globals.scss";
import { Toaster } from "sonner";
import { Providers } from "./(landing)/@components/Providers";
import { cookies } from "next/headers";
import axios from "axios";
import { config } from "@/config/config";

const montserrat = Montserrat({
  variable: "--font-montserrat",
  subsets: ["latin"],
});

async function getUser() {
  const cookieStore = await cookies();
  const token = cookieStore.get("token")?.value || "";

  if (!token) {
    console.log("No hay token");
    return;
  }

  if (token && token.split(".").length === 3) {
    try {
      const response = await axios.get(`${config.apiUrl}/user/yo`, {
        headers: {
          Authorization: `Bearer ${token}`,
          Cookie: `token=${token}`,
        },
        withCredentials: true,
      });

      return response.data.usuario;
    } catch (error) {
      console.log(error);
    }
  }
}

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const user = await getUser();
  return (
    <html lang="en">
      <body className={`${montserrat.variable} antialiased`}>
        <Toaster position="top-center" richColors />
        <Providers user={user}>{children}</Providers>
      </body>
    </html>
  );
}
